
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "TrigEnv.h"

void TrigEnv__ctx_type_1_init(TrigEnv__ctx_type_1 &_output_){
   TrigEnv__ctx_type_1 _ctx;
   _ctx.state = 0;
   _ctx.dur = 0.0f;
   TrigEnv__ctx_type_0_init(_ctx._inst615);
   TrigEnv__ctx_type_0_init(_ctx._inst215);
   _output_ = _ctx;
   return ;
}

float TrigEnv_trig2gate(TrigEnv__ctx_type_1 &_ctx, float trig, float len, float st){
   uint8_t bgate;
   bgate = (trig > 0.0f);
   if(_ctx.state == 0){
      if(TrigEnv_edge(_ctx._inst215,bgate)){
         _ctx.state = 1;
         _ctx.dur = (_ctx.dur + st);
      }
   }
   if(_ctx.state == 1){
      if(_ctx.dur < len){
         _ctx.dur = (_ctx.dur + st);
      }
      if(TrigEnv_edge(_ctx._inst615,bgate)){
         _ctx.dur = 0.0f;
      }
      if(_ctx.dur > len){
         _ctx.state = 0;
         _ctx.dur = 0.0f;
      }
   }
   return (5.f * int_to_float(_ctx.state));
}

void TrigEnv__ctx_type_2_init(TrigEnv__ctx_type_2 &_output_){
   TrigEnv__ctx_type_2 _ctx;
   _ctx.target = 0.0f;
   _ctx.state = 0;
   _ctx.scale = 0.0f;
   _ctx.rate = 0.0f;
   _ctx.out = 0.0f;
   TrigEnv__ctx_type_0_init(_ctx._inst215);
   _output_ = _ctx;
   return ;
}

float TrigEnv_env(TrigEnv__ctx_type_2 &_ctx, float gate, float a, float d){
   float a_rate;
   a_rate = (1.f / (0.01f + (100.f * a)));
   float d_rate;
   d_rate = (1.f / (0.01f + (100.f * d)));
   uint8_t bgate;
   bgate = (gate > 0.0f);
   _ctx.out = (_ctx.out + (0.004f * _ctx.rate * (_ctx.target + (- _ctx.out))));
   if(_ctx.state == 0){
      if(TrigEnv_edge(_ctx._inst215,bgate)){
         _ctx.state = 1;
         _ctx.scale = (0.2f * gate);
      }
      _ctx.rate = d_rate;
      _ctx.target = 0.0f;
   }
   if(_ctx.state == 1){
      if(bool_not(bgate) || (_ctx.out > 1024.f)){
         _ctx.state = 0;
      }
      _ctx.rate = a_rate;
      _ctx.target = 1228.8f;
   }
   return (_ctx.scale * float_clip((0.0009765625f * _ctx.out),0.0f,1.f));
}

void TrigEnv__ctx_type_3_init(TrigEnv__ctx_type_3 &_output_){
   TrigEnv__ctx_type_3 _ctx;
   _ctx.gateLen = 0.0f;
   _ctx.d = 0.0f;
   _ctx.a = 0.0f;
   TrigEnv__ctx_type_2_init(_ctx._inst2ac);
   TrigEnv__ctx_type_1_init(_ctx._inst1bc);
   _output_ = _ctx;
   return ;
}


