
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef TRIGENV_H
#define TRIGENV_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "TrigEnv.tables.h"

typedef struct TrigEnv__ctx_type_0 {
   uint8_t pre;
} TrigEnv__ctx_type_0;

typedef TrigEnv__ctx_type_0 TrigEnv_edge_type;

static_inline void TrigEnv__ctx_type_0_init(TrigEnv__ctx_type_0 &_output_){
   TrigEnv__ctx_type_0 _ctx;
   _ctx.pre = false;
   _output_ = _ctx;
   return ;
}

static_inline void TrigEnv_edge_init(TrigEnv__ctx_type_0 &_output_){
   TrigEnv__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t TrigEnv_edge(TrigEnv__ctx_type_0 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

typedef struct TrigEnv__ctx_type_1 {
   int state;
   float dur;
   TrigEnv__ctx_type_0 _inst615;
   TrigEnv__ctx_type_0 _inst215;
} TrigEnv__ctx_type_1;

typedef TrigEnv__ctx_type_1 TrigEnv_trig2gate_type;

void TrigEnv__ctx_type_1_init(TrigEnv__ctx_type_1 &_output_);

static_inline void TrigEnv_trig2gate_init(TrigEnv__ctx_type_1 &_output_){
   TrigEnv__ctx_type_1_init(_output_);
   return ;
}

float TrigEnv_trig2gate(TrigEnv__ctx_type_1 &_ctx, float trig, float len, float st);

typedef struct TrigEnv__ctx_type_2 {
   float target;
   int state;
   float scale;
   float rate;
   float out;
   TrigEnv__ctx_type_0 _inst215;
} TrigEnv__ctx_type_2;

typedef TrigEnv__ctx_type_2 TrigEnv_env_type;

void TrigEnv__ctx_type_2_init(TrigEnv__ctx_type_2 &_output_);

static_inline void TrigEnv_env_init(TrigEnv__ctx_type_2 &_output_){
   TrigEnv__ctx_type_2_init(_output_);
   return ;
}

float TrigEnv_env(TrigEnv__ctx_type_2 &_ctx, float gate, float a, float d);

typedef struct TrigEnv__ctx_type_3 {
   float gateLen;
   float d;
   float a;
   TrigEnv__ctx_type_2 _inst2ac;
   TrigEnv__ctx_type_1 _inst1bc;
} TrigEnv__ctx_type_3;

typedef TrigEnv__ctx_type_3 TrigEnv_process_type;

void TrigEnv__ctx_type_3_init(TrigEnv__ctx_type_3 &_output_);

static_inline void TrigEnv_process_init(TrigEnv__ctx_type_3 &_output_){
   TrigEnv__ctx_type_3_init(_output_);
   return ;
}

static_inline float TrigEnv_process(TrigEnv__ctx_type_3 &_ctx, float trig, float st){
   float gate;
   gate = TrigEnv_trig2gate(_ctx._inst1bc,trig,_ctx.gateLen,st);
   return TrigEnv_env(_ctx._inst2ac,gate,_ctx.a,_ctx.d);
}

typedef TrigEnv__ctx_type_3 TrigEnv_setGateLen_type;

static_inline void TrigEnv_setGateLen_init(TrigEnv__ctx_type_3 &_output_){
   TrigEnv__ctx_type_3_init(_output_);
   return ;
}

static_inline void TrigEnv_setGateLen(TrigEnv__ctx_type_3 &_ctx, float value){
   _ctx.gateLen = value;
};

typedef TrigEnv__ctx_type_3 TrigEnv_setA_type;

static_inline void TrigEnv_setA_init(TrigEnv__ctx_type_3 &_output_){
   TrigEnv__ctx_type_3_init(_output_);
   return ;
}

static_inline void TrigEnv_setA(TrigEnv__ctx_type_3 &_ctx, float value){
   _ctx.a = value;
};

typedef TrigEnv__ctx_type_3 TrigEnv_setD_type;

static_inline void TrigEnv_setD_init(TrigEnv__ctx_type_3 &_output_){
   TrigEnv__ctx_type_3_init(_output_);
   return ;
}

static_inline void TrigEnv_setD(TrigEnv__ctx_type_3 &_ctx, float value){
   _ctx.d = value;
};

typedef TrigEnv__ctx_type_3 TrigEnv_default_type;

static_inline void TrigEnv_default_init(TrigEnv__ctx_type_3 &_output_){
   TrigEnv__ctx_type_3_init(_output_);
   return ;
}

static_inline void TrigEnv_default(TrigEnv__ctx_type_3 &_ctx){
   _ctx.gateLen = 0.2f;
   _ctx.a = 0.1f;
   _ctx.d = 0.5f;
}



#endif // TRIGENV_H
